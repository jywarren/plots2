diff --git a/test/integration/incoming_mail_parsing_test/gmail_parsing_test.rb b/test/integration/incoming_mail_parsing_test/gmail_parsing_test.rb
index 7c3c1722..35a57dbb 100644
--- a/test/integration/incoming_mail_parsing_test/gmail_parsing_test.rb
+++ b/test/integration/incoming_mail_parsing_test/gmail_parsing_test.rb
@@ -16,4 +16,20 @@ class GmailParsingTest < ActionDispatch::IntegrationTest
     assert_equal User.find(reply.uid).email, user_email
     f.close()
   end
+
+  test 'to parse autoreply mail from outlook service correctly and add comment reply' do
+    mail = Mail.read('test/fixtures/incoming_test_emails/gmail/autoreply_incoming_gmail_email.eml')
+    node = Node.find(21) # this is the nid used in the .eml fixture
+    mail.subject = "Re: (##{node.id})"
+    Comment.receive_mail(mail)
+    f = File.open('test/fixtures/incoming_test_emails/gmail/autoreply_incoming_gmail_email.eml', 'r')
+    reply = Comment.last # this should be the just-created comment
+    user_email = mail.from.first
+    assert_equal reply.comment, f.read
+    assert_equal reply.nid, node.id
+    assert_equal reply.message_id, mail.message_id
+    assert_equal reply.comment_via, 1 # meaning email
+    assert_equal User.find(reply.uid).email, user_email
+    f.close()
+  end
 end
diff --git a/test/integration/incoming_mail_parsing_test/outlook_parsing_test.rb b/test/integration/incoming_mail_parsing_test/outlook_parsing_test.rb
index 0cd62868..6684ec0b 100644
--- a/test/integration/incoming_mail_parsing_test/outlook_parsing_test.rb
+++ b/test/integration/incoming_mail_parsing_test/outlook_parsing_test.rb
@@ -17,4 +17,8 @@ class OutlookParsingTest < ActionDispatch::IntegrationTest
     assert_equal User.find(reply.uid).email, user_email
     f.close()
   end
+
+  test 'second test to parse incoming mail from outlook service correctly and add comment reply' do
+    
+  end
 end
diff --git a/test/unit/comment_test.rb b/test/unit/comment_test.rb
index 1e038f7d..5d8e0136 100644
--- a/test/unit/comment_test.rb
+++ b/test/unit/comment_test.rb
@@ -25,8 +25,8 @@ class CommentTest < ActiveSupport::TestCase
   test 'should have gmail quote' do
     require 'mail'
     require 'nokogiri'
-    mail = Mail.read('test/fixtures/incoming_test_emails/gmail/incoming_gmail_email.eml') 
-    mail_doc = Nokogiri::HTML(mail.html_part.body.decoded) # To parse the mail to extract comment content and reply content 
+    mail = Mail.read('test/fixtures/incoming_test_emails/gmail/incoming_gmail_email.eml')
+    mail_doc = Nokogiri::HTML(mail.html_part.body.decoded) # To parse the mail to extract comment content and reply content
     gmail_quote = Comment.gmail_quote_present?(mail_doc)
     assert_equal gmail_quote, true
   end
